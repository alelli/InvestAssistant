@model ChartData
@{
    ViewData["Title"] = "График цены"; //Model.SecId;
    string sign = "";
    string color = "red";
    if (Model.LastChange > 0){
        color = "green";
        sign = "+";
    }
    double change = 0;
    if (Model.LastPrice != 0)
        change = Math.Round(Model.ForecastedPrices.Last() / Model.LastPrice * 100 - 100, 2);
}
<link rel="stylesheet" href="~/css/chart.css" asp-append-version="true" />
<table width="100%" border="0">
    <tr>
        <td valign="top">
            <form method="post">
                <div align="center" class="emitent_info">
                    <h3><input name="secId" value="@Model.SecId" class="read" readonly type="hidden"/></h3>
                    <table border="0">
                        <tr>
                            <td align="right"><h3 style="margin-top: 10px;"><input name="secName" value="@Model.SecName" class="secname" readonly/></h3></td>
                        </tr>
                        <tr >
                            <td align="right"><input name="lastPrice" value="@Model.LastPrice" class="price" size="5" readonly/>
                            <font size="4" color="#2F4F4F"><b>&nbspRUB</b></font>
                            </td>
                        </tr>
                        <tr>
                            <td align="right"><h3>Последнее изменение: <font size="2" color="@color">@sign@Model.LastChange %</font></h3></td>
                        </tr>
                        <tr>
                            @if (change > 0){
                                color = "green";
                                sign = "+";
                            }
                            else{
                                sign = "";
                                color = "red";
                            }
                            <td align="right"><h3>Вероятное изменение: <font size="2" color="@color">@sign@change %</font></h3></td>
                        </tr>
                    </table>
                </div>
            </form>
        </td>
        <td>
            <div align="right" width="100%" style="margin-right: 70px;">
              <div class="chart" align="center">
                <canvas id="stocksCanvas" width="800" height="500"></canvas>
              </div>
            </div>
        </td>
    </tr>
</table>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>
@section Scripts{
    <script>
        document.addEventListener('DOMContentLoaded', init, false);

        let canvas, secid;
        let dates = [], prices = [];
        let forecastedPrices = [];
        let check = document.querySelector('#check');

        async function init() {
            canvas = document.getElementById("stocksCanvas");
            secid = '@Model.SecId';

            let fullDates = [];
            fullDates = @(Html.Raw(Json.Serialize(Model.Dates)));
            prices = @(Html.Raw(Json.Serialize(Model.Prices)));
            forecastedPrices = @(Html.Raw(Json.Serialize(Model.ForecastedPrices)));
            formatDates(fullDates);
            drawChart();
        }

        function formatDates(fullDates){
            fullDates.forEach(c => {
            dates.push(new Date(c).toLocaleDateString());
            });
        }

        function drawChart(){
            var config = {
            type: 'line',
            data: {
                labels: dates,
                datasets: [
                {
                    data: prices,
                    fill: false,
                    borderColor: 'rgba(0, 0, 255, 0.4)',
                    borderWidth: 2,
                    backgroundColor: 'rgba(0, 0, 255, 1)',
                    //pointBackgroundColor: 'rgba(255, 0, 0, 0.5)',
                    pointBorderColor: 'rgba(255, 255, 255, 1)',
                    pointBorderWidth: 1,
                    pointHoverBackgroundColor: 'rgba(255, 100, 0, 0.8)',
                    pointHoverBorderColor: 'rgba(255, 100, 0, 0.8)',
                    pointHoverBorderWidth: 0,
                    lineTension: 0,
                },
                {
                    data: forecastedPrices,
                    fill: false,
                    borderColor: 'rgba(0, 200, 0, 0.5)',
                    borderWidth: 1,
                    backgroundColor: 'rgba(0, 200, 0, 0.5)',
                    lineTension: 0,
                    pointHoverBackgroundColor: 'rgba(255, 100, 0, 0.8)',
                    pointHoverBorderColor: 'rgba(255, 100, 0, 0.8)',
                }
                ]
            },
            options:{
                responsive: false,
                legend: {
                    display: false,
                },
                title: {
                    display: true,
                    text: secid
                },
                tooltips: {
      	        backgroundColor: 'rgba(10, 10, 100, 0.7)',
                displayColors: false,
                bodyFontSize: 14,
                // bodyColor: 'rgba(255, 0, 0, 1)',
                callbacks: {
                    label: function(tooltipItems, data) { 
                    return tooltipItems.yLabel + ' RUB';
                    }
                }
                },
                scales: {
                xAxes: [{
                    display: true,
                    ticks: {
                    backdropColor: 'rgba(255, 0, 0, 1)',
                    callback: function(value, index, ticks) {
                        return index % 4 === 0 || index == ticks.length - 1  ? value : '';
                    }
                    },
                }],
                yAxes: [{
                    display: true,
                    position: "right",
                    color: 'red',
                }]
                },
            }
            }
            window.chart = new Chart(canvas, config);
        }

        document.querySelectorAll('#adding').forEach(t => {
            t.addEventListener('click', changeAmount, false);
        });

        let amount = 1;
        function changeAmount(e) {
          if (e.target.dataset.add == -1 && amount > 1){
            amount--;
            document.querySelector("#stockAmount").value = amount;
          }
          else if (e.target.dataset.add == 1) {
            amount++;
            document.querySelector("#stockAmount").value = amount;
          }
        }
    </script>
}