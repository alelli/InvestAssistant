@model int
@{
    ViewData["Title"] = "Список";
}
<link rel="stylesheet" href="~/css/table.css" asp-append-version="true" />
<h2>@ViewBag.Date</h2>
    <div width="100%" align="center">
        <form method="post">
        <table id="catTable" class="securities" align="center" border="1">
          <caption>Котировки на текущую дату</caption>
          <thead>
            <tr>
              <th width="70px" data-sort='0'>Код</th>
              <th width="120px" data-sort='1'>Наименование</th>
              <th data-sort='2'>Последняя цена</th>
            </tr>
          </thead>
          <tbody>
            <tr ><td colspan="5"><i>Loading...</i></td></tr>
        </table>
        </form>
        <div class="pages">
          <button id="prevButton">Назад</button>
          <button id="toPageButton" data-page="1" style="border: 1px solid black;">1</button>
          <section id="pagination"></section>
          <button id="nextButton">Вперед</button>
        </div>
      </div>

    @section Scripts{
        <script>
            document.addEventListener('DOMContentLoaded', init, false);

            let data, table, pagesSection, curPageButton;
            let sortAsc = true;
            const pageSize = 20;
            const pagesCount = 8;
            let sortCol = 0;
            let curPage = 1;

            async function init() {
                table = document.querySelector('#catTable tbody');
                let url = '';
                if ('@Model' == '1'){
                    url = 'https://iss.moex.com/iss/engines/stock/markets/shares/boards/TQBR/securities.json?iss.meta=off&iss.only=securities,marketdata&securities.columns=SECID,SHORTNAME&marketdata.columns=LAST';
                }
                else {
                    url = 'https://iss.moex.com/iss/engines/stock/markets/bonds/boards/TQCB/securities.json?iss.meta=off&iss.only=securities,marketdata&securities.columns=SECID,SHORTNAME&marketdata.columns=LAST';
                }
                //alert(url);
                let resp = await fetch(url);
                if (resp.ok) {
                    data = await resp.json();
                    setPagination();
                    renderTable();
                }
                else {
                    alert("request is invalid");
                }
            }

            function setPagination() {
                pagesSection = document.querySelector('#pagination');
                let pageCount = Math.ceil(data.securities.data.length / pageSize);
                let result = '';
                for (let i = 2; i <= pageCount; i++) {
                    if (i == pagesCount){
                        result += `<button>...</button>`;
                        break;
                    }
                    result += `<button id="toPageButton" name="${i}" listener="toPage(${i})" data-page="${i}">${i}
                        </button>`;
                }
                pagesSection.innerHTML = result;

                document.querySelectorAll('#toPageButton').forEach(t => {
                t.addEventListener('click', toPage, false);
                });
            }

            document.querySelector('#nextButton').addEventListener('click', nextPage, false);
            document.querySelector('#prevButton').addEventListener('click', previousPage, false);

            function renderTable() {
                let result = '';
                let start; 
                data.securities.data.filter((row, index) => {
                start = (curPage-1)*pageSize;
                let end =curPage*pageSize;
                if(index >= start && index < end) return true;
                }).forEach(c => {
                result += `<tr align="center">
                    <td><a href="/Stock/Shares/${c[0]}">${c[0]}</a></td>
                    <td>${c[1]}</td>
                    <td>${data.marketdata.data[start][0]}</td>
                    </tr>`;
                start++;
                });
                table.innerHTML = result;

                //alert("table is rendered");
            }

            document.querySelectorAll('#catTable thead tr th').forEach(t => {
              t.addEventListener('click', sort, false);
            });

            function sort(e) {
              let thisSort = e.target.dataset.sort;
              if (sortCol == thisSort) {
                sortAsc = !sortAsc;
              }
              else {
                sortCol = thisSort;
                sortAsc = true;
              }
              data.securities.data.sort((a, b) => {
                if(a[sortCol] < b[sortCol]) 
                  return sortAsc ? -1 : 1;
                if(a[sortCol] > b[sortCol]) 
                  return sortAsc ? 1 : -1;
                return 0;
              });
              check.innerHTML = sortCol;
              check1.innerHTML = sortAsc;
              renderTable();
            }

            function toPage(e){ 
              let pageNum = e.target.dataset.page;
              if (curPage != pageNum){
                document.querySelectorAll('#toPageButton').forEach(t => {
                  t.style.border = '1px transparent solid';
                });
                e.target.style.border = '1px black solid';
                curPage = pageNum;
                renderTable();
              }
            }

            function previousPage() {
                if (curPage > 1) {
                    curPage--;
                    renderTable();
                    circleCurPage(curPage);
                    alert("prev page");
                }
            }

            function nextPage() {
                if ((curPage * pageSize) < data.securities.data.length) {
                    curPage++;
                    renderTable();
                    circleCurPage(curPage);
                    alert("next page");
                }
            }

            function circleCurPage(curPage){
              document.querySelectorAll('#toPageButton').forEach(t => {
                if (t.dataset.page == curPage){
                  t.style.border = '1px black solid';
                }
                else 
                  t.style.border = '1px transparent solid';
              });
            }
            
        </script>
    }
